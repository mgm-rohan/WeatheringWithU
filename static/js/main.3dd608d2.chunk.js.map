{"version":3,"sources":["assets/finalclip.mp4","App.js","index.js"],"names":["api","App","useState","query","setQuery","weather","setWeather","myWeatherIcon","className","autoPlay","muted","loop","style","position","width","left","top","height","objectFit","transform","zIndex","src","MyVideo","type","placeholder","onChange","e","target","value","onKeyPress","evt","key","fetch","then","res","json","result","console","log","main","name","sys","country","d","currDay","getDay","currDate","getDate","currMonth","getMonth","currYear","getFullYear","dateBuilder","Date","WID","iconBuilder","id","Math","round","temp","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iNAAe,G,MAAA,IAA0B,uCCInCA,EACA,mCADAA,EAEC,2CA+HQC,MA3Hf,WAAgB,IAAD,EAESC,mBAAS,IAFlB,mBAERC,EAFQ,KAEFC,EAFE,OAGaF,mBAAS,IAHtB,mBAGRG,EAHQ,KAGAC,EAHA,KAKRC,EACQ,kBADRA,EAEG,WAFHA,EAGA,mBAHAA,EAIA,UAJAA,EAKM,SALNA,EAMC,eANDA,EAOE,aAkDP,OACE,sBAAKC,UAAU,MAAf,UAEE,uBAAOC,UAAQ,EAACC,OAAK,EAACC,MAAI,EAACC,MACzB,CACEC,SAAS,WACTC,MAAM,OACNC,KAAK,MACLC,IAAI,MACJC,OAAO,OACPC,UAAU,QACVC,UAAU,wBACVC,QAAQ,GATZ,SAaI,wBAAQC,IAAKC,EAASC,KAAK,gBAE/B,iCAGE,qBAAKf,UAAU,aAAf,SACE,uBAAOe,KAAK,OACVf,UAAU,aACVgB,YAAY,sBACZC,SAAU,SAAAC,GAAC,OAAItB,EAASsB,EAAEC,OAAOC,QACjCA,MAAOzB,EACP0B,WA1EE,SAAAC,GACC,UAAVA,EAAIC,KACLC,MAAM,GAAD,OAAIhC,EAAJ,qBAAyBG,EAAzB,+BAAqDH,IACzDiC,MAAK,SAAAC,GAAG,OAAEA,EAAIC,UACdF,MAAK,SAAAG,GACJ9B,EAAW8B,GACXhC,EAAS,IACTiC,QAAQC,IAAIjC,WAuEe,oBAAhBA,EAAQkC,KACjB,gCACE,sBAAK/B,UAAU,eAAf,UACE,sBAAKA,UAAU,WAAf,UAA2BH,EAAQmC,KAAnC,KAA2CnC,EAAQoC,IAAIC,WACvD,qBAAKlC,UAAU,OAAf,SApEQ,SAACmC,GACjB,IAEIC,EADO,CAAC,SAAU,SAAU,UAAW,YAAa,WAAY,SAAU,YAC5DD,EAAEE,UAChBC,EAASH,EAAEI,UACXC,EAJS,CAAC,UAAW,WAAY,QAAS,QAAS,MAAO,OAAQ,OAAQ,SAAU,YAAa,UAAW,WAAY,YAIvGL,EAAEM,YACnBC,EAAUP,EAAEQ,cAChB,MAAM,GAAN,OAAUP,EAAV,YAAqBE,EAArB,YAAiCE,EAAjC,YAA8CE,EAA9C,KA6D+BE,CAAY,IAAIC,WAEzC,qBAAK7C,UAAU,cAAf,SACE,sBAAKA,UAAU,OAAf,UACE,+BACA,mBAAGA,UAAS,aA/DR,SAAC8C,GAEjB,QAAO,GACL,KAAKA,GAAO,KAAOA,GAAO,IACxB,OAAO/C,EACT,KAAK+C,GAAO,KAAOA,GAAO,IACxB,OAAO/C,EACT,KAAK+C,GAAO,KAAOA,GAAO,IACxB,OAAO/C,EACT,KAAK+C,GAAO,KAAOA,GAAO,IACxB,OAAO/C,EACT,KAAK+C,GAAO,KAAOA,GAAO,IACxB,OAAO/C,EACT,KAAa,MAAR+C,EACH,OAAO/C,EACT,KAAK+C,GAAO,KAAOA,GAAO,IACxB,OAAO/C,EACT,QACE,OAAOA,GA+CGgD,CAAYlD,EAAQA,QAAQ,GAAGmD,IAFrB,gBAKZ,qBAAKhD,UAAU,UAAf,SAA0BH,EAAQA,QAAQ,GAAGkC,UAE1CkB,KAAKC,MAAMrD,EAAQkC,KAAKoB,MAT7B,gBAgBC,UCxHbC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.3dd608d2.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/finalclip.f4da33b4.mp4\";","import React, { useState } from 'react';\nimport 'weather-icons/css/weather-icons.css';\nimport MyVideo from \"./assets/finalclip.mp4\";\n\nconst api ={\n  key:\"546334b60167af59b81cd38378b99450\",\n  base:\"https://api.openweathermap.org/data/2.5/\"\n};\n\n\nfunction App() {\n\nconst [query,setQuery] =useState('');\nconst [weather,setWeather] =useState({});\n\n const myWeatherIcon={\n  ThunderStorm:\"wi-thunderstorm\",\n  Drizzle:\"wi-sleet\",\n  Rain:\"wi-storm-showers\",\n  Snow:\"wi-snow\",\n  Atmosphere:\"wi-fog\",\n  Clear:\"wi-day-sunny\",\n  Clouds:\"wi-day-fog\"\n};\n\nconst search =evt=>{\n  if(evt.key===\"Enter\"){\n    fetch(`${api.base}weather?q=${query}&units=metric&APPID=${api.key}`)\n    .then(res=>res.json())\n    .then(result=>{\n      setWeather(result);\n      setQuery('');\n      console.log(weather);\n    })\n\n  }\n};\n\n\n  const dateBuilder=(d)=>{\n    let months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"]\n    let days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n    let currDay =days[d.getDay()];\n    let currDate=d.getDate();\n    let currMonth=months[d.getMonth()];\n    let currYear =d.getFullYear();\n    return `${currDay} ${currDate} ${currMonth} ${currYear} `;\n}\n\nconst iconBuilder=(WID)=>{\n\n  switch(true){\n    case WID >= 200 && WID <= 232:\n      return myWeatherIcon.ThunderStorm;\n    case WID >= 300 && WID <= 321:\n      return myWeatherIcon.Drizzle;\n    case WID >= 500 && WID <= 531:\n      return myWeatherIcon.Rain;\n    case WID >= 600 && WID <= 622:\n      return myWeatherIcon.Snow;\n    case WID >= 701 && WID <= 781:\n      return myWeatherIcon.Atmosphere;\n    case WID === 800:        \n      return myWeatherIcon.Clear;\n    case WID >= 801 && WID <= 804:\n      return myWeatherIcon.Clouds;\n    default:\n      return myWeatherIcon.Snow;\n  }\n}\n\n\n  return (\n    <div className=\"app\">\n\n      <video autoPlay muted loop style={\n        {\n          position:\"absolute\",\n          width:\"100%\",\n          left:\"50%\",\n          top:\"50%\",\n          height:\"100%\",\n          objectFit:\"cover\",\n          transform:\"translate(-50%, -50%)\",\n          zIndex:-1\n\n        }\n      }>\n          <source src={MyVideo} type=\"video/mp4\" />\n        </video>\n      <main>\n\n\n        <div className=\"search-box\">\n          <input type=\"text\" \n            className=\"search-bar\"\n            placeholder=\"Type your City Name\"\n            onChange={e => setQuery(e.target.value)}\n            value={query}\n            onKeyPress={search}\n          />\n        </div>\n\n        {(typeof weather.main != \"undefined\") ? (\n        <div>\n          <div className=\"location-box\">\n            <div className=\"location\">{weather.name}, {weather.sys.country}</div>\n            <div className=\"date\">{dateBuilder(new Date())}</div>\n          </div>\n          <div className=\"weather-box\">\n            <div className=\"temp\">\n              <h3>\n              <i className={`wi ${\n                \n                iconBuilder(weather.weather[0].id)\n                } display-1`}></i>\n\n              <div className=\"weather\">{weather.weather[0].main}</div>\n              </h3>\n                {Math.round(weather.main.temp)}Â°C\n\n            </div>\n         \n\n          </div>\n        </div>\n        ) : ('')}\n\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n//import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}